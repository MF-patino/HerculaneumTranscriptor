name: Backend CI/CD Pipeline

# TRIGGERS
on:
  # For testing
  workflow_dispatch:
    # Input to optionally skip the final deploy step.
    inputs:
      skip_deploy:
        description: 'Set to "true" to skip the final Render deploy step'
        required: false
        default: false
        type: boolean

  # For Continuous Deployment
  push:
    branches:
      - master

  # For Continuous Integration
  pull_request:

# JOBS
jobs:
  # The first job is to build and test the application.
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven' # Cache Maven dependencies for faster builds

      # Run Maven tests
      # This runs all unit and integration tests. If any test fails,
      # the entire workflow will fail, blocking the PR.
      - name: Run Maven Tests
        run: mvn -B verify --file pom.xml

  # Build and deploy the Docker image.
  build-and-deploy:
    name: Build, Push & Deploy
    # This job needs the previous job to succeed first
    needs: build-and-test

    # ONLY run this job if the trigger was a push to the 'master' branch
    # or a manual workflow dispatch. It will be skipped for Pull Requests.
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/master') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_deploy != 'true')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # This single action handles building, tagging, and pushing.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Use the current directory for the build context
          push: true # Push the image after building
          # Tag the image with both 'latest' and a unique tag (commit SHA)
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/herculaneum-transcriptor:latest,${{ secrets.DOCKERHUB_USERNAME }}/herculaneum-transcriptor:${{ github.sha }}

      # Finally notify Render.com of the new image
      - name: Trigger Render deploy hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}